BEGIN:VCALENDAR
VERSION:2.0
PRODID:ics.py - http://git.io/lLljaA
BEGIN:VEVENT
DESCRIPTION:At Parallel Systems\, a team of C++ and Python developers raised on null pointers\, read/write races\, and the wild west of pip packaging\, set off to create a modern electric freight train with an appropriately modern systems language – Rust. We dive into our use of Rust as a general-purpose language for our entire tech stack for a safety-critical\, real-time application. Join us to learn about how we use Rust to write firmware\, to control and simulate the freight vehicle\, and even to wrap deep learning libraries to make them all available in Rust.
DTEND:20220806T002900Z
DTSTART:20220805T235900Z
SUMMARY:All Aboard The Rust (Electric Freight) Train!
UID:24a2abc3-f1e9-490d-9d47-845e7194a4a0@24a2.org
END:VEVENT
BEGIN:VEVENT
DESCRIPTION:"Bootstrapping" is the process of building a compiler written in its target language. Bootstrapping has been used since the development of ALGOL and LISP in the 1960s. In this talk\, you'll learn the history of the bootstrapping the Rust compiler\, how bootstrap works today\, and some big ideas for bootstrap in the future. You'll also have a chance to get involved in working on bootstrap.
DTEND:20220805T184000Z
DTSTART:20220805T181000Z
SUMMARY:Bootstrapping: The Once And Future Compiler
UID:1fd23f77-400b-4550-a886-4a359bd64930@1fd2.org
END:VEVENT
BEGIN:VEVENT
DESCRIPTION:Early registration outside the ballroom.
DTEND:20220805T003000Z
DTSTART:20220804T203000Z
SUMMARY:RustConf Early Registration
UID:0b932a12-9a38-4bd1-9324-71e934a6030a@0b93.org
END:VEVENT
BEGIN:VEVENT
DESCRIPTION:Buried deep in the test suite of rustc exists a singular file\, weird-exprs.rs\, that has been around since 2011 that is filled with "technically legal" Rust. While it is far from idiomatic and makes many a Rustacean ask "why?" if not actively running away from the horror it presents\, the test file is a document of what Rust has been and is today. It's also an example of things that need to be legal so we can write well formed Rust programs. This talk intends to dive into the history of the file as well as why any of it even works in the first place.
DTEND:20220805T210500Z
DTSTART:20220805T205000Z
SUMMARY:Weird Expressions And Where To Find Them
UID:c2013dd6-85e6-4ed5-a7c0-7a98afbf1ed6@c201.org
END:VEVENT
BEGIN:VEVENT
DESCRIPTION:Everything you want to know about the current and future state of the Rust project\, team and community.
DTEND:20220805T171000Z
DTSTART:20220805T162500Z
SUMMARY:Opening Keynote
UID:1c525631-8ec5-4682-91d1-8ecc057188d1@1c52.org
END:VEVENT
BEGIN:VEVENT
DESCRIPTION:OpenSUSE has always prided itself on being an innovative and unique linux distribution. Our approach to Rust has been no different - unlike other distributions\, we allow vendored crates\, follow upstream Rust release cadence and more. Doing this is not without challenges though. In this session\, we'll talk about how Rust is different in OpenSUSE\, how we tackle those tough issues around security and vendoring\, and how we worked to make a chameleon and crab best friends.
DTEND:20220805T234500Z
DTSTART:20220805T233000Z
SUMMARY:How We Ship Rust In Opensuse
UID:f0b31457-1080-419c-b7cb-34510292664b@f0b3.org
END:VEVENT
BEGIN:VEVENT
DESCRIPTION:Rust is often praised for its great docs\, libs\, and tools. Well\, Safe Rust is. Unsafe Rust is a mess. How can you expect more than "it's complicated" when you ask questions about The Thing For Complex Problems? looks around nervously Don't tell anyone but... Unsafe Rust Can Be Good Too\, If You Believe. Things that "surely work\, don't ask me how" ruin the fun for everyone. So pretend they don't work\, and we can make tools which obviously work! Better Docs\, Libs\, and Tools\, just for playing pretend! Learn about the new Strict Provenance APIs and how they help you have Nice Things!
DTEND:20220805T191800Z
DTSTART:20220805T184800Z
SUMMARY:What If We Pretended Unsafe Code Was Nice\, And Then It Was?
UID:cd33838a-71b4-4e4d-976f-1170d6ef50aa@cd33.org
END:VEVENT
BEGIN:VEVENT
DESCRIPTION:UNIX authentication sucks. The state of the art is PAM\, which is cursed C beyond imagination. However it's $CURRENT_YEAR and we have Rust now\, so we can use Rust to extend that stack without having to worry about most of the problems that C gives you. This talk will cover a brief overview of the PAM API\, the surreal horrors of how PAM actually works\, how to meet that API in Rust so you can write your own authentication logic\, and finally examples of cool things you can do with this. Along the way we will also discuss how to research things that the forces of justice have wanted you to forget.
DTEND:20220805T230200Z
DTSTART:20220805T223200Z
SUMMARY:The Sheer Terror Of Pam
UID:e9cf9106-574d-43c7-a036-bc5e586f488f@e9cf.org
END:VEVENT
BEGIN:VEVENT
DESCRIPTION:Oh no! My parser sprouted into an entire compiler! Compilers should not be reserved for programming languages! With the right care (lots of sun\, proper hydration) compilers are wildly beneficial outside of their traditional context. In fact we wrote one for GraphQL\, a query language! In this talk\, I'd like to tell you about the journey of apollo-rs - how we started with a performant\, lossless\, recursive-descent parser with really good errors that has now become a query-based\, diagnostics-first\, easily usable modern compiler.
DTEND:20220805T222200Z
DTSTART:20220805T215200Z
SUMMARY:Writing A Graphql Compiler In Rust\, A Case Study
UID:5933eedf-8936-4fa4-a307-fdd6079d8349@5933.org
END:VEVENT
BEGIN:VEVENT
DESCRIPTION:Happy hour in the hotel!
DTEND:20220805T023000Z
DTSTART:20220805T010000Z
SUMMARY:RustConf Happy Hour
UID:b143361d-544f-4de6-af84-d3e1e3bab8a6@b143.org
END:VEVENT
BEGIN:VEVENT
DESCRIPTION:Today\, async and await are stable parts of the language\, but you can't actually run async code without a third party runtime. Unlike most languages\, an async function has to be awaited before any work gets done. Cancellation can happen at any time and can cause surprising errors. Why is async Rust this way? And how is it changing? This talk will cover the design decisions and trade-offs which led to the current design\, what that design means for async programming today\, and what the Async Working Group is doing to make it better: our plans\, current status\, and ongoing work.
DTEND:20220805T175500Z
DTSTART:20220805T172500Z
SUMMARY:Async Rust: Past\, Present\, And Future
UID:c702e2ed-d161-48e5-870e-2179399ba891@c702.org
END:VEVENT
BEGIN:VEVENT
DESCRIPTION:Wondering why your open source project is struggling to turn users into contributors? Frustrated by how intimidating and opaque your favorite project is? Overwhelmed by your issue backlog? Open source projects are often focused on the shiny technical features\, but investing in transparency\, contributor onboarding and clear task prioritization is often the single most productive thing you can do. This talk covers fundamental strategies for project management\, and discusses how to adapt them to the unique challenges presented by open source teams\, large and small.
DTEND:20220805T213700Z
DTSTART:20220805T210700Z
SUMMARY:Your Open Source Repo Needs A Project Manager
UID:05a52bcf-f36f-484a-9460-2be09868e910@05a5.org
END:VEVENT
END:VCALENDAR